name: Deploy

on:
  release:
    types: [published] # fires whenever a new GitHub Release is published

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # we need full history & tags to checkout the correct tag
          fetch-depth: 0
          persist-credentials: false # donâ€™t keep the default GITHUB_TOKEN
          token: ${{ secrets.PA_TOKEN }} # use your Personal Access Token

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.GIT_ACTIONS }}" > ~/.ssh/github_action
          chmod 600 ~/.ssh/github_action

      - name: Extract tag name and version
        run: |
          echo "TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          VERSION=$(grep -m1 '^version' pyproject.toml | cut -d '"' -f2)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ vars.REMOTE_SERVER_ADDRESS }}
          username: ${{ vars.REMOTE_SERVER_USERNAME }}
          key_path: /home/runner/.ssh/github_action
          script: |
            cd "${{ vars.REMOTE_SERVER_PATH }}"
            # make sure the tag is present locally
            git pull origin main
            git fetch --tags
            git checkout "${TAG}"
            # inject both hash and tag into the environment for Docker Compose
            GIT_HASH=$(git rev-parse HEAD)
            sudo --preserve-env=GIT_HASH docker compose --profile prod up --build -d \
            #--build-arg GIT_HASH=$GIT_HASH --build-arg ENV_FILE=.env
            sudo docker network connect bridge djangoapp
