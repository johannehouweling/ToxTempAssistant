name: toxtempass
services:
  # Database
  postgres_for_django:
    profiles: ["prod"]
    image: postgres:17-alpine
    container_name: postgres_for_django
    restart: unless-stopped
    env_file:
      - ${ENV_FILE:-./.env}
    expose:
      - 5432
    networks:
      - db_network
    volumes:
      - db_data:/var/lib/postgresql/data

  postgres_test_for_django:
    profiles: ["test"]
    image: postgres:17-alpine
    container_name: postgres_test_for_django
    restart: unless-stopped
    env_file:
      - ${ENV_FILE:-./.env} # Use ENV ENV_FILE to .env.dummy for testing to run properly
    stop_grace_period: 30s
    stop_signal: SIGINT
    expose:
      - 5432
    networks:
      - db_network
    # No volumes to ensure ephemeral test DB

  # Django app
  djangoapp:
    profiles: ["test", "prod"]
    build:
      context: .
      dockerfile: myocyte/dockerfiles/djangoapp/Dockerfile
      args:
        GIT_HASH: "${GIT_HASH}"
    user: root
    container_name: djangoapp
    restart: unless-stopped
    command: >
      sh -c "gunicorn myocyte.wsgi:application --bind 0.0.0.0:8000 --log-level=info --max-requests=1000 --timeout=600 --keep-alive=5 --graceful-timeout=120 --error-logfile=/home/myocyte/logs/gunicorn-error.log --access-logfile=/home/myocyte/logs/gunicorn-access.log --workers=3"
    volumes:
      - ./myocyte/logs:/home/myocyte/logs
      - ./myocyte/static:/home/myocyte/static
      - ./myocyte/media:/home/myocyte/media
      - ./test-results:/home/myocte/test-results
    ports:
      - 8401:8000
    # not compatible with profiles how I want to use them
    # ensure in a production environment that the database is up before starting Django
    depends_on:
      - ${POSTGRES_HOST:-postgres_for_django}
    env_file:
      - ${ENV_FILE:-./.env}
    environment:
      - TESTING=${TESTING:-false} # Set to true for testing
    networks:
      - db_network
      - web_network
networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge
volumes:
  db_data:
