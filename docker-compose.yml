version: "3"
name: toxtempass
services:
  # Database
  postgres_for_django:
    image: postgres:17-alpine
    container_name: postgres_for_django
    restart: unless-stopped
    env_file:
      - ./.env
    ports:
      - 5432:5432
    network_mode: host
    volumes:
      - db_data:/var/lib/postgresql/data
  djangoapp:
    build: 
      context: ./myocyte
      dockerfile: dockerfiles/djangoapp/Dockerfile
    user: root
    container_name: djangoapp
    restart: unless-stopped
    command: gunicorn myocyte.wsgi:application --bind 0.0.0.0:8000 --log-level=info --max-requests=1000 --timeout=120 --keep-alive=5 --graceful-timeout=120 --error-logfile=/home/myocyte/logs/gunicorn-error.log --access-logfile=/home/myocyte/logs/gunicorn-access.log --access-logfile=/home/myocyte/logs/gunicorn-access.log
    volumes:
      - ./myocyte/logs:/home/myocyte/logs
      - ./myocyte/static:/home/myocyte/static
      - ./myocyte/media:/home/myocyte/media
    network_mode: host
    ports:
      - "8000:8000"
    depends_on:
      - postgres_for_django
    env_file:
      - ./.env
#    networks:
#      - db_network
      # - nginx_networkd
  # nginx:
  #   build: 
  #     context: ./myocyte/dockerfiles/nginx
  #     dockerfile: Dockerfile
  #   container_name: nginx
  #   restart: unless-stopped
  #   volumes:
  #     - ./myocyte/static:/home/myocyte/static
  #     - ./myocyte/media:/home/myocyte/media
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   depends_on:
  #     - djangoapp
  #   networks:
  #     - nginx_network
  # ngrok:
  #   image: ngrok/ngrok:latest
  #   container_name: ngrok
  #   command:
  #     - "http"
  #     - "http://host.docker.internal:80"
  #   environment:
  #     NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
  #   ports:
  #     - 4040:4040
  #   restart: unless-stopped
# networks:
#   db_network:
#     driver: bridge
#     attachable: true
  # nginx_network:
  #   driver: bridge
volumes:
  db_data:

    
  
