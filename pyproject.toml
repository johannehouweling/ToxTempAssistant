[project]
name = "toxtempassistant"
version = "1.2.1"
description = "LLM-based web-app to assist users in drafting ToxTemp, a template for describing in-vitro toxicity test methods in compliance with GD211."
readme = "README.md"
requires-python = ">=3.10,<4.0"
license = { text = "AGPL-3.0-or-later" }
authors = [
    { name = "Jente Houweling", email = "Jente.Houweling@rivm.nl" },
    { name = "Matthias Arras", email = "Matthias.Arras@gmail.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Programming Language :: Python :: 3.10",
    "Framework :: Django",
    "Framework :: Django :: 5.2",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Toxicology",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Biology",
    "Topic :: Scientific/Engineering :: Laboratory Information Management",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Operating System :: POSIX :: Linux",
    "Environment :: Docker",
]

dependencies = [
    "django>=5.2.4,<6.0.0",
    "django-bootstrap5>=25.1,<26.0",
    "django-extensions>=4.1,<5.0",
    "django-guardian>=3.0.3,<4.0.0",
    "django-simple-history>=3.10.1,<4.0.0",
    "django-q2>=1.8.0,<2.0.0",
    "django-tables2>=2.7.5,<3.0.0",
    "aiohappyeyeballs>=2.6.1,<3.0.0",
    "aiohttp>=3.12.15,<4.0.0",
    "aiosignal>=1.4.0,<2.0.0",
    "annotated-types>=0.7.0,<0.8.0",
    "anyio>=4.9.0,<5.0.0",
    "asgiref>=3.9.1,<4.0.0",
    "attrs>=25.3.0,<26.0.0",
    "certifi>=2025.7.14,<2026.0.0",
    "charset-normalizer>=3.4.2,<4.0.0",
    "distro>=1.9.0,<2.0.0",
    "dotenv>=0.9.9,<0.10.0",
    "frozenlist>=1.7.0,<2.0.0",
    "h11>=0.16.0,<0.17.0",
    "httpcore>=1.0.9,<2.0.0",
    "httpx>=0.28.1,<0.29.0",
    "httpx-sse>=0.4.1,<0.5.0",
    "idna>=3.10,<4.0",
    "iniconfig>=2.1.0,<3.0.0",
    "jiter>=0.10.0,<0.11.0",
    "jsonpatch>=1.33,<2.0",
    "jsonpointer>=3.0.0,<4.0.0",
    "langchain-community>=0.3.27,<0.4.0",
    "langchain-core>=0.3.72,<0.4.0",
    "langchain-openai>=0.3.28,<0.4.0",
    "langchain-text-splitters>=0.3.9,<0.4.0",
    "langsmith>=0.4.8,<0.5.0",
    "multidict>=6.6.3,<7.0.0",
    "mypy-extensions>=1.1.0,<2.0.0",
    "openai>=1.97.1,<2.0.0",
    "orjson>=3.11.1,<4.0.0",
    "packaging>=25.0,<26.0",
    "pillow>=11.3.0,<12.0.0",
    "pluggy>=1.6.0,<2.0.0",
    "propcache>=0.3.2,<0.4.0",
    "psycopg2>=2.9.10,<3.0.0",
    "pydantic>=2.11.7,<3.0.0",
    "pydantic-settings>=2.10.1,<3.0.0",
    "pydantic-core>=2.37.2,<3.0.0",
    "pypdf>=5.9.0,<6.0.0",
    "requests>=2.32.4,<3.0.0",
    "requests-toolbelt>=1.0.0,<2.0.0",
    "setuptools>=80.9.0,<81.0.0",
    "sniffio>=1.3.1,<2.0.0",
    "sqlalchemy>=2.0.42,<3.0.0",
    "sqlparse>=0.5.3,<0.6.0",
    "tenacity>=9.1.2,<10.0.0",
    "tiktoken>=0.9.0,<0.10.0",
    "tqdm>=4.67.1,<5.0.0",
    "typing-inspect>=0.9.0,<0.10.0",
    "tzdata>=2025.2,<2026.0",
    "unstructured[docx]>=0.18.11,<0.19.0",
    "urllib3>=2.5.0,<3.0.0",
    "wheel>=0.45.1,<0.46.0",
    "yarl>=1.20.1,<2.0.0",
    "zstandard>=0.23.0,<0.24.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1,<9.0.0",
    "pytest-django>=4.11.1,<5.0.0",
    "pytest-factoryboy>=2.8.1,<3.0.0",
    "factory-boy>=3.3.3,<4.0.0",
    "Faker>=37.4.2,<38.0.0",
    "python-dotenv>=1.1.1,<2.0.0",
    "pyyaml>=6.0.2,<7.0.0",
    "regex>=2025.7.31,<2026.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "bert-score>=0.3.13,<1.0.0",
    "python-semantic-release[git]>=10.2.0,<11.0.0",
]

[project.urls]
homepage = "https://toxtempassistant.vhp4safety.nl"
repository = "https://github.com/johannehouweling/ToxTempAssistant"
documentation = "https://toxtempassistant.vhp4safety.nl/docs"

[tool.poetry]
package-mode = false

[tool.semantic_release]
version_source = "commit"
branch = "main"
update_changelog = true
version_toml = ["pyproject.toml:project.version"]

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
# tells pytest-django where to find your settings
DJANGO_SETTINGS_MODULE = "toxtempass.myocyte.settings"
# which test file patterns to collect
python_files = ["tests.py", "test_*.py", "*_tests.py"]
